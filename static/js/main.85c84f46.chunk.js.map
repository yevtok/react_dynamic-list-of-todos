{"version":3,"sources":["types/Filter.ts","reducers/reducer.ts","Store.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api/api.ts","api/user.ts","components/TodoModal/TodoModal.tsx","api/todos.ts","services/filter.ts","App.tsx","index.tsx"],"names":["Filter","stateReducer","state","action","type","todos","payload","openedTodo","user","filter","option","query","isModalOpened","isLoadingTodos","isLoadingUser","defaultDispatch","initialState","id","title","completed","userId","name","email","phone","All","DispatchContext","createContext","StateContext","GlobalStateProvider","children","useReducer","dispatch","Provider","value","TodoList","useContext","className","map","todo","cn","onClick","handleSelectButton","TodoFilter","onSubmit","event","preventDefault","onChange","target","Object","entries","key","placeholder","length","style","pointerEvents","Loader","BASE_URL","wait","delay","Promise","resolve","setTimeout","get","url","a","fullURL","then","fetch","res","json","TodoModal","useEffect","getUser","userFromServer","href","App","filterTodos","useCallback","todosToFilter","toLowerCase","includes","trim","filterByQuery","Active","Completed","filterByOption","useState","filteredTodos","setFilteredTodos","getTodos","todosFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85c84f46.chunk.js","sourcesContent":["export enum Filter {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import { State } from '../types/State';\nimport { Action } from '../types/Action';\n\nexport function stateReducer(state: State, action: Action): State {\n  switch (action.type) {\n    case 'setTodos':\n      return {\n        ...state,\n        todos: action.payload,\n      };\n\n    case 'setOpenedTodo':\n      return {\n        ...state,\n        openedTodo: action.payload,\n      };\n\n    case 'setUser':\n      return {\n        ...state,\n        user: action.payload,\n      };\n\n    case 'setFilterOption':\n      return {\n        ...state,\n        filter: {\n          ...state.filter,\n          option: action.payload,\n        },\n      };\n\n    case 'setFilterQuery':\n      return {\n        ...state,\n        filter: {\n          ...state.filter,\n          query: action.payload,\n        },\n      };\n\n    case 'setIsModalOpened':\n      return {\n        ...state,\n        isModalOpened: action.payload,\n      };\n\n    case 'setIsLoadingTodos':\n      return {\n        ...state,\n        isLoadingTodos: action.payload,\n      };\n\n    case 'setIsLoadingUser':\n      return {\n        ...state,\n        isLoadingUser: action.payload,\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n}\n","import React, { createContext, Dispatch, useReducer } from 'react';\nimport { stateReducer } from './reducers/reducer';\nimport { Action } from './types/Action';\nimport { State } from './types/State';\nimport { Filter } from './types/Filter';\n\nconst defaultDispatch: Dispatch<Action> = () => {};\n\nconst initialState: State = {\n  todos: [],\n  openedTodo: {\n    id: 0,\n    title: '',\n    completed: false,\n    userId: 0,\n  },\n  user: {\n    id: 0,\n    name: '',\n    email: '',\n    phone: '',\n  },\n  filter: {\n    option: Filter.All,\n    query: '',\n  },\n  isModalOpened: false,\n  isLoadingTodos: true,\n  isLoadingUser: true,\n};\n\nexport const DispatchContext = createContext(defaultDispatch);\nexport const StateContext = createContext(initialState);\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const GlobalStateProvider: React.FC<Props> = ({ children }) => {\n  const [state, dispatch] = useReducer(stateReducer, initialState);\n\n  return (\n    <DispatchContext.Provider value={dispatch}>\n      <StateContext.Provider value={state}>\n        {children}\n      </StateContext.Provider>\n    </DispatchContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport cn from 'classnames';\nimport { DispatchContext, StateContext } from '../../Store';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  const dispatch = useContext(DispatchContext);\n  const { openedTodo, isModalOpened } = useContext(StateContext);\n\n  const handleSelectButton = (todo: Todo) => {\n    dispatch({ type: 'setOpenedTodo', payload: todo });\n    dispatch({ type: 'setIsModalOpened', payload: true });\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className={cn({\n              'has-background-info-light': todo.id === openedTodo.id,\n            })}\n          >\n            <td className=\"is-vcentered\">\n              {todo.id}\n            </td>\n\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={cn({\n                  'has-text-success': todo.completed,\n                  'has-text-danger': !todo.completed,\n                })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                type=\"button\"\n                data-cy=\"selectButton\"\n                className=\"button\"\n                onClick={() => handleSelectButton(todo)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={cn('far', {\n                      'fa-eye': !isModalOpened,\n                      'fa-eye-slash': isModalOpened,\n                    })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useContext } from 'react';\nimport { DispatchContext, StateContext } from '../../Store';\nimport { Filter } from '../../types/Filter';\n\nexport const TodoFilter = () => {\n  const dispatch = useContext(DispatchContext);\n  const { filter: { query } } = useContext(StateContext);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n  };\n\n  const handleFilterOption = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch({\n      type: 'setFilterOption',\n      payload: event.target.value as Filter,\n    });\n  };\n\n  const handleFilterQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch({\n      type: 'setFilterQuery',\n      payload: event.target.value,\n    });\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={handleSubmit}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleFilterOption}\n          >\n            {Object.entries(Filter).map(([key, value]) => (\n              <option key={key} value={value}>{key}</option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          type=\"text\"\n          data-cy=\"searchInput\"\n          value={query}\n          placeholder=\"Search...\"\n          className=\"input\"\n          onChange={handleFilterQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => dispatch({ type: 'setFilterQuery', payload: '' })}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nexport async function get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n","import { get } from './api';\nimport { User } from '../types/User';\n\nexport async function getUser(userId: number) {\n  return get<User>(`/users/${userId}`);\n}\n","import React, { useContext, useEffect } from 'react';\nimport cn from 'classnames';\nimport { DispatchContext, StateContext } from '../../Store';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api/user';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo }) => {\n  const dispatch = useContext(DispatchContext);\n  const { user, isLoadingUser } = useContext(StateContext);\n\n  const handleModalClose = () => {\n    dispatch({\n      type: 'setOpenedTodo',\n      payload: {\n        id: 0,\n        title: '',\n        completed: false,\n        userId: 0,\n      },\n    });\n    dispatch({ type: 'setIsModalOpened', payload: false });\n    dispatch({ type: 'setIsLoadingUser', payload: true });\n  };\n\n  useEffect(() => {\n    getUser(todo.userId).then((userFromServer: User) => {\n      dispatch({ type: 'setUser', payload: userFromServer });\n      dispatch({ type: 'setIsLoadingUser', payload: false });\n    });\n  }, [todo, dispatch]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoadingUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              data-cy=\"modal-header\"\n              className=\"modal-card-title has-text-weight-medium\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              data-cy=\"modal-close\"\n              className=\"delete\"\n              onClick={handleModalClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p data-cy=\"modal-title\" className=\"block\">\n              {todo.title}\n            </p>\n\n            <p data-cy=\"modal-user\" className=\"block\">\n              <strong\n                className={cn({\n                  'has-text-success': todo.completed,\n                  'has-text-danger': !todo.completed,\n                })}\n              >\n                {todo.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { get } from './api';\nimport { Todo } from '../types/Todo';\n\nexport async function getTodos() {\n  return get<Todo[]>('/todos');\n}\n","import { Todo } from '../types/Todo';\nimport { Filter } from '../types/Filter';\n\nexport const filterByQuery = (todosToFilter: Todo[], query: string) => {\n  return todosToFilter.filter(\n    todo => todo.title.toLowerCase().includes(query.trim().toLowerCase()),\n  );\n};\n\nexport const filterByOption = (todosToFilter: Todo[], option: Filter) => {\n  switch (option) {\n    case Filter.All:\n    default:\n      return todosToFilter;\n\n    case Filter.Active:\n      return todosToFilter.filter(todo => !todo.completed);\n\n    case Filter.Completed:\n      return todosToFilter.filter(todo => todo.completed);\n  }\n};\n","/* eslint-disable max-len */\nimport React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api/todos';\nimport { filterByOption, filterByQuery } from './services/filter';\nimport { DispatchContext, StateContext } from './Store';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const dispatch = useContext(DispatchContext);\n  const {\n    todos,\n    openedTodo,\n    filter,\n    isModalOpened,\n    isLoadingTodos,\n  } = useContext(StateContext);\n\n  const filterTodos = useCallback((todosToFilter: Todo[]) => {\n    const { option, query } = filter;\n\n    return filterByQuery(filterByOption(todosToFilter, option), query);\n  }, [filter]);\n\n  const [filteredTodos, setFilteredTodos] = useState(filterTodos(todos));\n\n  useEffect(() => {\n    getTodos().then(todosFromServer => {\n      dispatch({ type: 'setTodos', payload: todosFromServer });\n      dispatch({ type: 'setIsLoadingTodos', payload: false });\n    });\n  }, [dispatch]);\n\n  useEffect(() => {\n    setFilteredTodos(filterTodos(todos));\n  }, [todos, filter, filterTodos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoadingTodos && (\n                <Loader />\n              )}\n\n              {!isLoadingTodos && todos.length > 0 && (\n                <TodoList todos={filteredTodos} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isModalOpened && (\n        <TodoModal todo={openedTodo} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { GlobalStateProvider } from './Store';\n\nReactDOM.render(\n  <GlobalStateProvider>\n    <App />\n  </GlobalStateProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}